CREATE TABLE IF NOT EXISTS users (
  id SERIAL PRIMARY KEY,
  contact_id INTEGER,
  payment_id INTEGER,
  email VARCHAR(100),
  password VARCHAR(256),
  first_name VARCHAR(50),
  last_name VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS contact_details (
  id SERIAL PRIMARY KEY,
  first_name VARCHAR(50),
  last_name VARCHAR(50),
  address_line1 VARCHAR(100),
  address_line2 VARCHAR(100),
  city_town VARCHAR(50),
  postcode VARCHAR(8),
  phone VARCHAR(11),
  email VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS payment (
  id SERIAL PRIMARY KEY,
  name_on_card VARCHAR(100),
  payment_type VARCHAR(20),
  card_number INTEGER,
  expiry DATE
);

CREATE TABLE IF NOT EXISTS orders (
  id SERIAL PRIMARY KEY,
  user_id INTEGER,
  created TIMESTAMP,
  modified TIMESTAMP,
  total MONEY,
  status VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS products (
  id SERIAL PRIMARY KEY,
  product_name VARCHAR(50),
  category VARCHAR(20),
  description VARCHAR(250),
  price MONEY
);

CREATE TABLE IF NOT EXISTS carts (
  id SERIAL PRIMARY KEY,
  product_id INTEGER,
  created TIMESTAMP,
  modified TIMESTAMP
);

CREATE TABLE IF NOT EXISTS orders_products (
  order_id INTEGER,
  product_id INTEGER,
  quantity INTEGER
);

CREATE TABLE IF NOT EXISTS carts_products (
  cart_id INTEGER,
  product_id INTEGER,
  quantity INTEGER
);

ALTER TABLE users
ADD FOREIGN KEY (contact_id) REFERENCES contact_details(id);

ALTER TABLE users
ADD FOREIGN KEY (payment_id) REFERENCES payment(id);

ALTER TABLE orders
ADD FOREIGN KEY (user_id) REFERENCES users(id);

ALTER TABLE carts
ADD FOREIGN KEY (product_id) REFERENCES products(id);

ALTER TABLE orders_products
ADD FOREIGN KEY (order_id) REFERENCES orders(id);

ALTER TABLE orders_products
ADD FOREIGN KEY (product_id) REFERENCES products(id);

ALTER TABLE carts_products
ADD FOREIGN KEY (cart_id) REFERENCES carts(id);

ALTER TABLE carts_products
ADD FOREIGN KEY (product_id) REFERENCES products(id);
